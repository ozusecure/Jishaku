
stages:
  - build
  - deploy

.pypi_dependencies: &pypi_dependencies
  before_script:
    - pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')

.git_dependencies: &git_dependencies
  before_script:
    - pip install -U "discord.py[voice] @ git+https://github.com/Rapptz/discord.py@master"
    - pip install -U $(find requirements -name *.txt -print | sed -e 's/^/-r /' | tr '\n' ' ')

.run_tests: &run_tests
  script:
    - PYTHONPATH="$(pwd)" pytest -vs --cov=jishaku --cov-report term-missing:skip-covered
    - flake8 .
    - pylint -j "$(nproc)" jishaku
    - isort . --check-only
    - python ./setup.py sdist bdist_egg bdist_wheel
    - rm -rf jishaku
    - find dist -name *.whl -exec pip install '{}' +
    - PYTHONPATH="$(pwd)" pytest -vs
    - cd docs && make html

buster 3.11 git:
  stage: build
  image: gorialis/discord.py:3.11-buster-master
  <<: *git_dependencies
  <<: *run_tests
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

buster 3.11 pypi:
  stage: build
  image: gorialis/discord.py:3.11-buster-pypi
  <<: *pypi_dependencies
  <<: *run_tests
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

buster 3.10 git:
  stage: build
  image: gorialis/discord.py:3.10-buster-master
  <<: *git_dependencies
  <<: *run_tests
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

buster 3.10 pypi:
  stage: build
  image: gorialis/discord.py:3.10-buster-pypi
  <<: *pypi_dependencies
  <<: *run_tests
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

alpine 3.11 git:
  stage: build
  image: gorialis/discord.py:3.11-alpine-master
  <<: *git_dependencies
  <<: *run_tests
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

alpine 3.11 pypi:
  stage: build
  image: gorialis/discord.py:3.11-alpine-pypi
  <<: *pypi_dependencies
  <<: *run_tests
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

alpine 3.10 git:
  stage: build
  image: gorialis/discord.py:3.10-alpine-master
  <<: *git_dependencies
  <<: *run_tests
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

alpine 3.10 pypi:
  stage: build
  image: gorialis/discord.py:3.10-alpine-pypi
  <<: *pypi_dependencies
  <<: *run_tests
  artifacts:
    paths:
      - dist
      - docs/_build
    expire_in: 2 days
  retry: 1
  when: always

pages:
  stage: deploy
  image: alpine:latest
  script:
    - mv docs/_build/html public
  artifacts:
    paths:
      - public
  only:
    - master
